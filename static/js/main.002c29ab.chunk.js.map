{"version":3,"sources":["utils/commonFunctions.js","constants.js","serviceWorker.js","i18n/index.js","index.js"],"names":["locale","numberFormatter","Intl","NumberFormat","maximumFractionDigits","isDevelopmentOrTest","getIndiaDate","utcToZonedTime","Date","getIndiaDateISO","formatISO","representation","getIndiaDateYesterdayISO","subDays","formatLastUpdated","unformattedDate","then","localePackage","LOCALE_SHORTHANDS","i18n","language","window","localStorage","i18nextLng","formatDistance","parseIndiaDate","isoDate","match","ISO_DATE_REGEX","INDIA_ISO_SUFFIX","formatDate","formatString","date","format","abbreviateNumber","number","numberCleaned","Math","round","abs","floor","formatNumber","value","option","statistic","isNaN","STATISTIC_CONFIGS","hideZero","capitalize","s","charAt","toUpperCase","slice","toTitleCase","str","replace","txt","substr","toLowerCase","getStatistic","data","type","expiredDate","normalizedByPopulationPer","movingAverage","category","days","differenceInDays","meta","tested","TESTED_EXPIRING_DAYS","val","multiplyFactor","population","confirmed","deceased","recovered","other","active","dose1","vaccinated1","dose2","vaccinated2","isLinear","nonLinear","isFinite","getTableStatistic","args","tableConfig","total","delta","fetcher","url","fetch","response","json","retry","fn","retriesLeft","interval","Promise","resolve","reject","catch","error","setTimeout","API_DOMAIN","DATA_API_ROOT","english","hindi","telugu","kannada","gujarati","marathi","tamil","bengali","punjabi","malayalam","odiya","displayName","color","showDelta","vaccinated","tpr","cfr","recoveryRatio","hide","activeRatio","PRIMARY_STATISTICS","LEVEL_STATISTICS","TABLE_STATISTICS","TABLE_STATISTICS_EXPANDED","Object","keys","filter","MAP_STATISTICS","TIMESERIES_STATISTICS","BRUSH_STATISTICS","UPDATES_COUNT","DISTRICT_TABLE_COUNT","D3_TRANSITION_DURATION","MINIGRAPH_LOOKBACK_DAYS","UNASSIGNED_STATE_CODE","UNKNOWN_DISTRICT_KEY","GOSPEL_DATE","SPRING_CONFIG_NUMBERS","clamp","precision","TIMESERIES_CHART_TYPES","TIMESERIES_LOOKBACK_DAYS","MAP_VIZS","CHOROPLETH","BUBBLES","MAP_VIEWS","STATES","DISTRICTS","MAP_TYPES","COUNTRY","STATE","MAPS_DIR","MAP_META","AP","geoDataFile","mapType","AR","AS","BR","CT","GA","GJ","HR","HP","JK","JH","KA","KL","MP","MH","MN","ML","MZ","NL","OR","PB","RJ","SK","TN","TG","TR","UT","UP","WB","AN","CH","DN","DL","LA","LD","PY","TT","MAP_LEGEND_HEIGHT","STATE_NAMES","stateCodes","stateCodesMap","map","key","index","push","code","name","STATE_CODES","STATE_CODES_ARRAY","isLocalhost","Boolean","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","use","Backend","LanguageDetector","initReactI18next","init","debug","keySeparator","returnEmptyString","fallbackLng","load","backend","loadPath","addPath","saveMissing","interpolation","escapeValue","App","lazy","rootElement","document","getElementById","main","render","fallback","requestIdleCallback","IntersectionObserver","src","done","js","createElement","onload","onerror","Error","head","appendChild","loadScript","URL","process","href","origin","addEventListener","headers","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.002c29ab.chunk.js","sourcesContent":["import {\n  INDIA_ISO_SUFFIX,\n  ISO_DATE_REGEX,\n  LOCALE_SHORTHANDS,\n  STATISTIC_CONFIGS,\n  TESTED_EXPIRING_DAYS,\n} from '../constants';\n\nimport {\n  differenceInDays,\n  format,\n  formatDistance,\n  formatISO,\n  subDays,\n} from 'date-fns';\nimport {utcToZonedTime} from 'date-fns-tz';\nimport i18n from 'i18next';\n\nlet locale = null;\nconst numberFormatter = new Intl.NumberFormat('en-IN', {\n  maximumFractionDigits: 1,\n});\n\nconst getLocale = () => {\n  import('date-fns/locale/').then((localePackage) => {\n    locale =\n      localePackage[\n        LOCALE_SHORTHANDS[i18n.language || window.localStorage.i18nextLng]\n      ];\n  });\n};\n\nexport const isDevelopmentOrTest = () => {\n  if (process.env.NODE_ENV === 'development' || process.env.NODE_ENV === 'test')\n    return true;\n  return false;\n};\n\nexport const getIndiaDate = () => {\n  return utcToZonedTime(new Date(), 'Asia/Kolkata');\n};\n\nexport const getIndiaDateISO = () => {\n  return formatISO(getIndiaDate(), {representation: 'date'});\n};\n\nexport const getIndiaDateYesterday = () => {\n  return subDays(getIndiaDate(), 1);\n};\n\nexport const getIndiaDateYesterdayISO = () => {\n  return formatISO(getIndiaDateYesterday(), {representation: 'date'});\n};\n\nexport const formatLastUpdated = (unformattedDate) => {\n  getLocale();\n  return formatDistance(new Date(unformattedDate), new Date(), {\n    locale: locale,\n  });\n};\n\nexport const parseIndiaDate = (isoDate) => {\n  if (!isoDate) return getIndiaDate();\n  if (isoDate.match(ISO_DATE_REGEX)) isoDate += INDIA_ISO_SUFFIX;\n  return utcToZonedTime(new Date(isoDate), 'Asia/Kolkata');\n};\n\nexport const formatDate = (unformattedDate, formatString) => {\n  if (!unformattedDate) return '';\n  if (\n    typeof unformattedDate === 'string' &&\n    unformattedDate.match(ISO_DATE_REGEX)\n  )\n    unformattedDate += INDIA_ISO_SUFFIX;\n  const date = utcToZonedTime(new Date(unformattedDate), 'Asia/Kolkata');\n  return format(date, formatString, {\n    locale: locale,\n  });\n};\n\nexport const abbreviateNumber = (number) => {\n  const numberCleaned = Math.round(Math.abs(number));\n  if (numberCleaned < 1e3) return numberFormatter.format(Math.floor(number));\n  else if (numberCleaned >= 1e3 && numberCleaned < 1e5)\n    return numberFormatter.format(number / 1e3) + 'K';\n  else if (numberCleaned >= 1e5 && numberCleaned < 1e7)\n    return numberFormatter.format(number / 1e5) + 'L';\n  else if (numberCleaned >= 1e7 && numberCleaned < 1e10)\n    return numberFormatter.format(number / 1e7) + 'Cr';\n  else if (numberCleaned >= 1e10 && numberCleaned < 1e14)\n    return numberFormatter.format(number / 1e10) + 'K Cr';\n  else if (numberCleaned >= 1e14)\n    return numberFormatter.format(number / 1e14) + 'L Cr';\n};\n\nexport const formatNumber = (value, option = '', statistic) => {\n  if (\n    isNaN(value) ||\n    (statistic && STATISTIC_CONFIGS[statistic]?.hideZero && value === 0)\n  ) {\n    return '-';\n  } else if (option === 'long') {\n    return numberFormatter.format(\n      Math.abs(value) < 1 ? value : Math.round(value)\n    );\n  } else if (option === 'short') {\n    return abbreviateNumber(value);\n  } else if (option === '%') {\n    return `${numberFormatter.format(value)}%`;\n  } else if (option === '') {\n    return numberFormatter.format(value);\n  }\n};\n\nexport const capitalize = (s) => {\n  if (typeof s !== 'string') return '';\n  return s.charAt(0).toUpperCase() + s.slice(1);\n};\n\nexport const toTitleCase = (str) => {\n  return str.replace(/\\w\\S*/g, function (txt) {\n    return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n  });\n};\n\nexport const getStatistic = (\n  data,\n  type,\n  statistic,\n  {\n    expiredDate = null,\n    normalizedByPopulationPer = null,\n    movingAverage = false,\n  } = {}\n) => {\n  // TODO: Replace delta with daily to remove ambiguity\n  //       Or add another type for daily/delta\n\n  if (expiredDate !== null) {\n    if (STATISTIC_CONFIGS[statistic]?.category === 'tested') {\n      const days = differenceInDays(\n        expiredDate,\n        parseIndiaDate(data?.meta?.tested?.['last_updated'])\n      );\n      if (days > TESTED_EXPIRING_DAYS) {\n        return 0;\n      }\n    }\n  }\n\n  let multiplyFactor = 1;\n  if (type === 'delta' && movingAverage) {\n    type = 'delta7';\n    multiplyFactor *= 1 / 7;\n  }\n\n  if (normalizedByPopulationPer === 'million') {\n    multiplyFactor *= 1e6 / data?.meta?.population || 0;\n  } else if (normalizedByPopulationPer === 'lakh') {\n    multiplyFactor *= 1e5 / data?.meta?.population || 0;\n  } else if (normalizedByPopulationPer === 'hundred') {\n    multiplyFactor *= 1e2 / data?.meta?.population || 0;\n  }\n\n  let val;\n  if (statistic === 'active' || statistic === 'activeRatio') {\n    const confirmed = data?.[type]?.confirmed || 0;\n    const deceased = data?.[type]?.deceased || 0;\n    const recovered = data?.[type]?.recovered || 0;\n    const other = data?.[type]?.other || 0;\n    const active = confirmed - deceased - recovered - other;\n    if (statistic === 'active') {\n      val = active;\n    } else if (statistic === 'activeRatio') {\n      val = (100 * active) / confirmed;\n    }\n  } else if (statistic === 'vaccinated') {\n    const dose1 = data?.[type]?.vaccinated1 || 0;\n    const dose2 = data?.[type]?.vaccinated2 || 0;\n    val = dose1 + dose2;\n  } else if (statistic === 'tpr') {\n    const confirmed = data?.[type]?.confirmed || 0;\n    const tested = data?.[type]?.tested || 0;\n    val = (100 * confirmed) / tested;\n  } else if (statistic === 'cfr') {\n    const deceased = data?.[type]?.deceased || 0;\n    const confirmed = data?.[type]?.confirmed || 0;\n    val = (100 * deceased) / confirmed;\n  } else if (statistic === 'recoveryRatio') {\n    const recovered = data?.[type]?.recovered || 0;\n    const confirmed = data?.[type]?.confirmed || 0;\n    val = (100 * recovered) / confirmed;\n  } else if (statistic === 'population') {\n    val = type === 'total' ? data?.meta?.population || 0 : 0;\n  } else {\n    val = data?.[type]?.[statistic];\n  }\n\n  const isLinear = !STATISTIC_CONFIGS[statistic]?.nonLinear;\n\n  return ((isLinear && multiplyFactor) || 1) * (isFinite(val) && val) || 0;\n};\n\nexport const getTableStatistic = (data, statistic, args) => {\n  const type = STATISTIC_CONFIGS[statistic]?.tableConfig?.type || 'total';\n\n  const total = getStatistic(data, type, statistic, args);\n  const delta =\n    type === 'total' ? getStatistic(data, 'delta', statistic, args) : 0;\n  return {total, delta};\n};\n\nexport const fetcher = (url) => {\n  return fetch(url).then((response) => {\n    return response.json();\n  });\n};\n\nexport function retry(fn, retriesLeft = 5, interval = 1000) {\n  return new Promise((resolve, reject) => {\n    fn()\n      .then(resolve)\n      .catch((error) => {\n        setTimeout(() => {\n          if (retriesLeft === 1) {\n            // reject('maximum retries exceeded');\n            reject(error);\n            return;\n          }\n\n          // Passing on \"reject\" is the important part\n          retry(fn, retriesLeft - 1, interval).then(resolve, reject);\n        }, interval);\n      });\n  });\n}\n","// export const API_DOMAIN = 'http://192.168.1.69:8080';\n// export const API_DOMAIN =\n//   'https://raw.githubusercontent.com/shuklaayush/api/test/tmp';\nexport const API_DOMAIN = 'https://api.covid19india.org';\n\nexport const DATA_API_ROOT = `${API_DOMAIN}/v4/min`;\n\nexport const LOCALE_SHORTHANDS = {\n  english: 'en-US',\n  hindi: 'hi',\n  telugu: 'te',\n  kannada: 'en-US',\n  gujarati: 'gu',\n  marathi: 'en-US',\n  tamil: 'ta',\n  bengali: 'bn',\n  punjabi: 'en-US',\n  malayalam: 'en-US',\n  odiya: 'en-US',\n};\n\nexport const STATISTIC_CONFIGS = {\n  confirmed: {\n    displayName: 'confirmed',\n    color: '#ff073a',\n    format: 'long',\n    tableConfig: {\n      showDelta: true,\n    },\n  },\n  active: {\n    displayName: 'active',\n    color: '#007bff',\n    format: 'long',\n  },\n  recovered: {\n    displayName: 'recovered',\n    color: '#28a745',\n    format: 'long',\n    tableConfig: {\n      showDelta: true,\n    },\n  },\n  deceased: {\n    displayName: 'deceased',\n    color: '#6c757d',\n    format: 'long',\n    tableConfig: {\n      showDelta: true,\n    },\n  },\n  other: {\n    displayName: 'other',\n    format: 'long',\n    tableConfig: {\n      showDelta: true,\n    },\n  },\n  tested: {\n    displayName: 'tested',\n    color: '#4b1eaa',\n    format: 'short',\n    hideZero: true,\n    category: 'tested',\n    tableConfig: {\n      showDelta: true,\n    },\n  },\n  vaccinated1: {\n    displayName: 'vaccinated with at least one dose',\n    color: '#fb5581',\n    format: 'short',\n    hideZero: true,\n    category: 'vaccinated',\n    tableConfig: {\n      showDelta: true,\n    },\n  },\n  vaccinated2: {\n    displayName: 'fully vaccinated',\n    color: '#fb5581',\n    format: 'short',\n    hideZero: true,\n    category: 'vaccinated',\n    tableConfig: {\n      showDelta: true,\n    },\n  },\n  vaccinated: {\n    displayName: 'vaccine doses administered',\n    color: '#fb5581',\n    format: 'short',\n    hideZero: true,\n    category: 'vaccinated',\n    tableConfig: {\n      showDelta: true,\n    },\n  },\n  tpr: {\n    displayName: 'test positivity ratio',\n    format: '%',\n    color: '#fd7e14',\n    nonLinear: true,\n    hideZero: true,\n    category: 'tested',\n    tableConfig: {\n      type: 'delta7',\n      displayName: 'test positivity ratio (last 7 days)',\n    },\n  },\n  cfr: {\n    displayName: 'case fatality ratio',\n    format: '%',\n    color: '#6c757d',\n    nonLinear: true,\n  },\n  recoveryRatio: {\n    displayName: 'recovery ratio',\n    format: '%',\n    nonLinear: true,\n    tableConfig: {\n      hide: true,\n    },\n  },\n  activeRatio: {\n    displayName: 'active ratio',\n    format: '%',\n    nonLinear: true,\n    tableConfig: {\n      hide: true,\n    },\n  },\n  population: {\n    displayName: 'population',\n    format: 'short',\n    hideZero: true,\n  },\n};\n\nexport const PRIMARY_STATISTICS = [\n  'confirmed',\n  'active',\n  'recovered',\n  'deceased',\n];\n\nexport const LEVEL_STATISTICS = [...PRIMARY_STATISTICS];\n\nexport const TABLE_STATISTICS = [...PRIMARY_STATISTICS, 'tested', 'vaccinated'];\n\nexport const TABLE_STATISTICS_EXPANDED = Object.keys(STATISTIC_CONFIGS).filter(\n  (statistic) => !STATISTIC_CONFIGS[statistic]?.tableConfig?.hide\n);\n\nexport const MAP_STATISTICS = [...PRIMARY_STATISTICS];\n\nexport const TIMESERIES_STATISTICS = [\n  ...PRIMARY_STATISTICS,\n  'tested',\n  'vaccinated',\n  'tpr',\n];\n\nexport const BRUSH_STATISTICS = ['confirmed'];\n\nexport const UPDATES_COUNT = 5;\n\nexport const DISTRICT_TABLE_COUNT = 40;\n\nexport const D3_TRANSITION_DURATION = 300;\n\nexport const MINIGRAPH_LOOKBACK_DAYS = 20;\n\nexport const TESTED_EXPIRING_DAYS = 7;\n\nexport const UNASSIGNED_STATE_CODE = 'UN';\n\nexport const UNKNOWN_DISTRICT_KEY = 'Unknown';\n\nexport const GOSPEL_DATE = '2020-04-26';\n\nexport const ISO_DATE_REGEX = /^\\d{4}-([0]\\d|1[0-2])-([0-2]\\d|3[01])$/g;\n\nexport const INDIA_ISO_SUFFIX = 'T00:00:00+05:30';\n\nexport const SPRING_CONFIG_NUMBERS = {clamp: true, precision: 1};\n\nexport const TIMESERIES_CHART_TYPES = {\n  total: 'Cumulative',\n  delta: 'Daily',\n};\n\nexport const TIMESERIES_LOOKBACK_DAYS = [null, 90, 30];\n\nexport const MAP_VIZS = {\n  CHOROPLETH: 0,\n  BUBBLES: 1,\n};\n\nexport const MAP_VIEWS = {\n  STATES: 0,\n  DISTRICTS: 1,\n};\n\nexport const MAP_TYPES = {\n  COUNTRY: 0,\n  STATE: 1,\n};\n\nexport const MAPS_DIR =\n  process.env.NODE_ENV === 'production' ? '/mini_maps' : '/projected_maps';\n\nexport const MAP_META = {\n  AP: {\n    geoDataFile: `${MAPS_DIR}/andhrapradesh.json`,\n    mapType: MAP_TYPES.STATE,\n  },\n  AR: {\n    geoDataFile: `${MAPS_DIR}/arunachalpradesh.json`,\n    mapType: MAP_TYPES.STATE,\n  },\n  AS: {\n    geoDataFile: `${MAPS_DIR}/assam.json`,\n    mapType: MAP_TYPES.STATE,\n  },\n  BR: {\n    geoDataFile: `${MAPS_DIR}/bihar.json`,\n    mapType: MAP_TYPES.STATE,\n  },\n  CT: {\n    geoDataFile: `${MAPS_DIR}/chhattisgarh.json`,\n    mapType: MAP_TYPES.STATE,\n  },\n  GA: {\n    geoDataFile: `${MAPS_DIR}/goa.json`,\n    mapType: MAP_TYPES.STATE,\n  },\n  GJ: {\n    geoDataFile: `${MAPS_DIR}/gujarat.json`,\n    mapType: MAP_TYPES.STATE,\n  },\n  HR: {\n    geoDataFile: `${MAPS_DIR}/haryana.json`,\n    mapType: MAP_TYPES.STATE,\n  },\n  HP: {\n    geoDataFile: `${MAPS_DIR}/himachalpradesh.json`,\n    mapType: MAP_TYPES.STATE,\n  },\n  JK: {\n    geoDataFile: `${MAPS_DIR}/jammukashmir.json`,\n    mapType: MAP_TYPES.STATE,\n  },\n  JH: {\n    geoDataFile: `${MAPS_DIR}/jharkhand.json`,\n    mapType: MAP_TYPES.STATE,\n  },\n  KA: {\n    geoDataFile: `${MAPS_DIR}/karnataka.json`,\n    mapType: MAP_TYPES.STATE,\n  },\n  KL: {\n    geoDataFile: `${MAPS_DIR}/kerala.json`,\n    mapType: MAP_TYPES.STATE,\n  },\n  MP: {\n    geoDataFile: `${MAPS_DIR}/madhyapradesh.json`,\n    mapType: MAP_TYPES.STATE,\n  },\n  MH: {\n    geoDataFile: `${MAPS_DIR}/maharashtra.json`,\n    mapType: MAP_TYPES.STATE,\n  },\n  MN: {\n    geoDataFile: `${MAPS_DIR}/manipur.json`,\n    mapType: MAP_TYPES.STATE,\n  },\n  ML: {\n    geoDataFile: `${MAPS_DIR}/meghalaya.json`,\n    mapType: MAP_TYPES.STATE,\n  },\n  MZ: {\n    geoDataFile: `${MAPS_DIR}/mizoram.json`,\n    mapType: MAP_TYPES.STATE,\n  },\n  NL: {\n    geoDataFile: `${MAPS_DIR}/nagaland.json`,\n    mapType: MAP_TYPES.STATE,\n  },\n  OR: {\n    geoDataFile: `${MAPS_DIR}/odisha.json`,\n    mapType: MAP_TYPES.STATE,\n  },\n  PB: {\n    geoDataFile: `${MAPS_DIR}/punjab.json`,\n    mapType: MAP_TYPES.STATE,\n  },\n  RJ: {\n    geoDataFile: `${MAPS_DIR}/rajasthan.json`,\n    mapType: MAP_TYPES.STATE,\n  },\n  SK: {\n    geoDataFile: `${MAPS_DIR}/sikkim.json`,\n    mapType: MAP_TYPES.STATE,\n  },\n  TN: {\n    geoDataFile: `${MAPS_DIR}/tamilnadu.json`,\n    mapType: MAP_TYPES.STATE,\n  },\n  TG: {\n    geoDataFile: `${MAPS_DIR}/telangana.json`,\n    mapType: MAP_TYPES.STATE,\n  },\n  TR: {\n    geoDataFile: `${MAPS_DIR}/tripura.json`,\n    mapType: MAP_TYPES.STATE,\n  },\n  UT: {\n    geoDataFile: `${MAPS_DIR}/uttarakhand.json`,\n    mapType: MAP_TYPES.STATE,\n  },\n  UP: {\n    geoDataFile: `${MAPS_DIR}/uttarpradesh.json`,\n    mapType: MAP_TYPES.STATE,\n  },\n  WB: {\n    geoDataFile: `${MAPS_DIR}/westbengal.json`,\n    mapType: MAP_TYPES.STATE,\n  },\n  AN: {\n    geoDataFile: `${MAPS_DIR}/andamannicobarislands.json`,\n    mapType: MAP_TYPES.STATE,\n  },\n  CH: {\n    geoDataFile: `${MAPS_DIR}/chandigarh.json`,\n    mapType: MAP_TYPES.STATE,\n  },\n  DN: {\n    geoDataFile: `${MAPS_DIR}/dnh-and-dd.json`,\n    mapType: MAP_TYPES.STATE,\n  },\n  DL: {\n    geoDataFile: `${MAPS_DIR}/delhi.json`,\n    mapType: MAP_TYPES.STATE,\n  },\n  LA: {\n    geoDataFile: `${MAPS_DIR}/ladakh.json`,\n    mapType: MAP_TYPES.STATE,\n  },\n  LD: {\n    geoDataFile: `${MAPS_DIR}/lakshadweep.json`,\n    mapType: MAP_TYPES.STATE,\n  },\n  PY: {\n    geoDataFile: `${MAPS_DIR}/puducherry.json`,\n    mapType: MAP_TYPES.STATE,\n  },\n  TT: {\n    geoDataFile: `${MAPS_DIR}/india.json`,\n    mapType: MAP_TYPES.COUNTRY,\n  },\n};\n\nexport const MAP_LEGEND_HEIGHT = 50;\n\nexport const STATE_NAMES = {\n  AP: 'Andhra Pradesh',\n  AR: 'Arunachal Pradesh',\n  AS: 'Assam',\n  BR: 'Bihar',\n  CT: 'Chhattisgarh',\n  GA: 'Goa',\n  GJ: 'Gujarat',\n  HR: 'Haryana',\n  HP: 'Himachal Pradesh',\n  JH: 'Jharkhand',\n  KA: 'Karnataka',\n  KL: 'Kerala',\n  MP: 'Madhya Pradesh',\n  MH: 'Maharashtra',\n  MN: 'Manipur',\n  ML: 'Meghalaya',\n  MZ: 'Mizoram',\n  NL: 'Nagaland',\n  OR: 'Odisha',\n  PB: 'Punjab',\n  RJ: 'Rajasthan',\n  SK: 'Sikkim',\n  TN: 'Tamil Nadu',\n  TG: 'Telangana',\n  TR: 'Tripura',\n  UT: 'Uttarakhand',\n  UP: 'Uttar Pradesh',\n  WB: 'West Bengal',\n  AN: 'Andaman and Nicobar Islands',\n  CH: 'Chandigarh',\n  DN: 'Dadra and Nagar Haveli and Daman and Diu',\n  DL: 'Delhi',\n  JK: 'Jammu and Kashmir',\n  LA: 'Ladakh',\n  LD: 'Lakshadweep',\n  PY: 'Puducherry',\n  TT: 'India',\n  [UNASSIGNED_STATE_CODE]: 'Unassigned',\n};\n\nconst stateCodes = [];\nconst stateCodesMap = {};\nObject.keys(STATE_NAMES).map((key, index) => {\n  stateCodesMap[STATE_NAMES[key]] = key;\n  stateCodes.push({code: key, name: STATE_NAMES[key]});\n  return null;\n});\nexport const STATE_CODES = stateCodesMap;\nexport const STATE_CODES_ARRAY = stateCodes;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () =>\n      setTimeout(() => {\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n        if (isLocalhost) {\n          // This is running on localhost. Let's check if a service worker still exists or not.\n          checkValidServiceWorker(swUrl, config);\n\n          // Add some additional logging to localhost, pointing developers to the\n          // service worker/PWA documentation.\n          navigator.serviceWorker.ready.then(() => {\n            console.log(\n              'This web app is being served cache-first by a service ' +\n                'worker. To learn more, visit https://bit.ly/CRA-PWA'\n            );\n          });\n        } else {\n          // Is not localhost. Just register service worker\n          registerValidSW(swUrl, config);\n        }\n      }, 3000)\n    );\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: {'Service-Worker': 'script'},\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import {API_DOMAIN} from '../constants';\nimport {isDevelopmentOrTest} from '../utils/commonFunctions';\n\nimport i18n from 'i18next';\nimport LanguageDetector from 'i18next-browser-languagedetector';\nimport Backend from 'i18next-http-backend';\nimport {initReactI18next} from 'react-i18next';\n\nconst DEBUG = false;\n\ni18n\n  .use(Backend)\n  .use(LanguageDetector)\n  .use(initReactI18next)\n  .init({\n    debug: isDevelopmentOrTest() && DEBUG,\n    keySeparator: false,\n    returnEmptyString: false,\n    fallbackLng: 'english',\n    load: 'languageOnly',\n    backend: {\n      loadPath: `${API_DOMAIN}/locales/locale_{{lng}}.json`,\n      addPath: 'http://localhost:9999/',\n    },\n    saveMissing: isDevelopmentOrTest() && DEBUG,\n    interpolation: {\n      escapeValue: false,\n    },\n  });\n\nexport default i18n;\n","// import './wdyr';\nimport * as serviceWorker from './serviceWorker';\nimport './i18n';\nimport {retry} from './utils/commonFunctions';\n\nimport {Suspense, lazy, StrictMode} from 'react';\nimport {render} from 'react-dom';\nimport {BrowserRouter as Router} from 'react-router-dom';\n\nconst App = lazy(() => retry(() => import('./App')));\nconst rootElement = document.getElementById('root');\n\nconst main = () =>\n  render(\n    <Suspense fallback={<div />}>\n      <Router>\n        <StrictMode>\n          <App />\n        </StrictMode>\n      </Router>\n    </Suspense>,\n    rootElement\n  );\n\nconst browserSupportsAllFeatures = () => {\n  return window.requestIdleCallback && window.IntersectionObserver;\n};\n\nconst loadScript = (src, done) => {\n  const js = document.createElement('script');\n  js.src = src;\n  js.onload = function () {\n    done();\n  };\n  js.onerror = function () {\n    done(new Error('Failed to load script ' + src));\n  };\n  document.head.appendChild(js);\n};\n\nif (browserSupportsAllFeatures()) {\n  main();\n} else {\n  loadScript(\n    'https://polyfill.io/v3/polyfill.min.js?version=3.52.1&features=requestIdleCallback%2CIntersectionObserver',\n    main\n  );\n}\n\nserviceWorker.register();\n"],"sourceRoot":""}