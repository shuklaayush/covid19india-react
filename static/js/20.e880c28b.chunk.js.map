{"version":3,"sources":["../node_modules/date-fns/esm/addMonths/index.js","../node_modules/date-fns/esm/subMonths/index.js","../node_modules/date-fns/esm/sub/index.js","components/loaders/Timeseries.js","components/TimeseriesExplorer.js","../../src/shared/uid.ts","../../src/web/Svg.tsx","../../src/web/ContentLoader.tsx","../../src/web/presets/FacebookStyle.tsx"],"names":["addMonths","dirtyDate","dirtyAmount","requiredArgs","arguments","date","toDate","amount","toInteger","isNaN","Date","NaN","dayOfMonth","getDate","endOfDesiredMonth","getTime","setMonth","getMonth","daysInMonth","setFullYear","getFullYear","subMonths","sub","duration","years","months","weeks","days","hours","minutes","seconds","dateWithoutMonths","dateWithoutDays","subDays","minutestoSub","secondstoSub","mstoSub","finalDate","TimeseriesLoader","windowWidth","window","innerWidth","width","viewBox","height","speed","cx","cy","r","Timeseries","lazy","React","memo","stateCode","timeseries","timelineDate","regionHighlighted","setRegionHighlighted","anchor","setAnchor","expandTable","t","useTranslation","useSessionStorage","TIMESERIES_LOOKBACKS","MONTH","lookback","setLookback","useLocalStorage","chartType","setChartType","explorerElement","useRef","isVisible","useIsVisible","once","selectedRegion","useMemo","districts","districtName","selectedTimeseries","dates","regions","states","Object","keys","filter","code","sort","code1","code2","STATE_NAMES","localeCompare","map","reduce","acc1","acc2","dropdownRegions","find","region","today","getIndiaYesterdayISO","pastDates","TWO_WEEKS","cutOffDate","formatISO","parseIndiaDate","representation","handleChange","useCallback","target","JSON","parse","value","resetDropdown","className","classnames","stickied","expanded","style","display","ref","onClick","bind","this","entries","TIMESERIES_CHART_TYPES","index","ctype","key","stringify","onChange","fallback","values","option","type","selected","prevProps","currProps","forceRender","equal","SVG","animate","backgroundColor","backgroundOpacity","baseUrl","children","foregroundColor","foregroundOpacity","gradientRatio","uniqueKey","interval","rtl","title","fixedId","Math","random","toString","substring","idClip","idGradient","idAria","rtlStyle","transform","keyTimes","dur","React.createElement","role","props","id","x","y","clipPath","fill","offset","stopColor","stopOpacity","attributeName","repeatCount","defaultProps","ContentLoader","Svg","Facebook","ReactContentLoaderFacebook","rx"],"mappings":"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","file":"static/js/20.e880c28b.chunk.js","sourcesContent":["import toInteger from '../_lib/toInteger/index.js';\nimport toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name addMonths\n * @category Month Helpers\n * @summary Add the specified number of months to the given date.\n *\n * @description\n * Add the specified number of months to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of months to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the months added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 5 months to 1 September 2014:\n * var result = addMonths(new Date(2014, 8, 1), 5)\n * //=> Sun Feb 01 2015 00:00:00\n */\n\nexport default function addMonths(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var amount = toInteger(dirtyAmount);\n\n  if (isNaN(amount)) {\n    return new Date(NaN);\n  }\n\n  if (!amount) {\n    // If 0 months, no-op to avoid changing times in the hour before end of DST\n    return date;\n  }\n\n  var dayOfMonth = date.getDate(); // The JS Date object supports date math by accepting out-of-bounds values for\n  // month, day, etc. For example, new Date(2020, 1, 0) returns 31 Dec 2019 and\n  // new Date(2020, 13, 1) returns 1 Feb 2021.  This is *almost* the behavior we\n  // want except that dates will wrap around the end of a month, meaning that\n  // new Date(2020, 13, 31) will return 3 Mar 2021 not 28 Feb 2021 as desired. So\n  // we'll default to the end of the desired month by adding 1 to the desired\n  // month and using a date of 0 to back up one day to the end of the desired\n  // month.\n\n  var endOfDesiredMonth = new Date(date.getTime());\n  endOfDesiredMonth.setMonth(date.getMonth() + amount + 1, 0);\n  var daysInMonth = endOfDesiredMonth.getDate();\n\n  if (dayOfMonth >= daysInMonth) {\n    // If we're already at the end of the month, then this is the correct date\n    // and we're done.\n    return endOfDesiredMonth;\n  } else {\n    // Otherwise, we now know that setting the original day-of-month value won't\n    // cause an overflow, so set the desired day-of-month. Note that we can't\n    // just set the date of `endOfDesiredMonth` because that object may have had\n    // its time changed in the unusual case where where a DST transition was on\n    // the last day of the month and its local time was in the hour skipped or\n    // repeated next to a DST transition.  So we use `date` instead which is\n    // guaranteed to still have the original time.\n    date.setFullYear(endOfDesiredMonth.getFullYear(), endOfDesiredMonth.getMonth(), dayOfMonth);\n    return date;\n  }\n}","import toInteger from '../_lib/toInteger/index.js';\nimport addMonths from '../addMonths/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name subMonths\n * @category Month Helpers\n * @summary Subtract the specified number of months from the given date.\n *\n * @description\n * Subtract the specified number of months from the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of months to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the months subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract 5 months from 1 February 2015:\n * var result = subMonths(new Date(2015, 1, 1), 5)\n * //=> Mon Sep 01 2014 00:00:00\n */\n\nexport default function subMonths(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addMonths(dirtyDate, -amount);\n}","import subDays from '../subDays/index.js';\nimport subMonths from '../subMonths/index.js';\nimport toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\nimport toInteger from '../_lib/toInteger/index.js';\n/**\n * @name sub\n * @category Common Helpers\n * @summary Subtract the specified years, months, weeks, days, hours, minutes and seconds from the given date.\n *\n * @description\n * Subtract the specified years, months, weeks, days, hours, minutes and seconds from the given date.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Duration} duration - the object with years, months, weeks, days, hours, minutes and seconds to be subtracted\n *\n * | Key     | Description                        |\n * |---------|------------------------------------|\n * | years   | Amount of years to be subtracted   |\n * | months  | Amount of months to be subtracted  |\n * | weeks   | Amount of weeks to be subtracted   |\n * | days    | Amount of days to be subtracted    |\n * | hours   | Amount of hours to be subtracted   |\n * | minutes | Amount of minutes to be subtracted |\n * | seconds | Amount of seconds to be subtracted |\n *\n * All values default to 0\n *\n * @returns {Date} the new date with the seconds subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract the following duration from 15 June 2017 15:29:20\n * const result = sub(new Date(2017, 5, 15, 15, 29, 20), {\n *   years: 2,\n *   months: 9,\n *   weeks: 1,\n *   days: 7,\n *   hours: 5,\n *   minutes: 9,\n *   seconds: 30\n * })\n * //=> Mon Sep 1 2014 10:19:50\n */\n\nexport default function sub(dirtyDate, duration) {\n  requiredArgs(2, arguments);\n  if (!duration || typeof duration !== 'object') return new Date(NaN);\n  var years = 'years' in duration ? toInteger(duration.years) : 0;\n  var months = 'months' in duration ? toInteger(duration.months) : 0;\n  var weeks = 'weeks' in duration ? toInteger(duration.weeks) : 0;\n  var days = 'days' in duration ? toInteger(duration.days) : 0;\n  var hours = 'hours' in duration ? toInteger(duration.hours) : 0;\n  var minutes = 'minutes' in duration ? toInteger(duration.minutes) : 0;\n  var seconds = 'seconds' in duration ? toInteger(duration.seconds) : 0; // Subtract years and months\n\n  var dateWithoutMonths = subMonths(toDate(dirtyDate), months + years * 12); // Subtract weeks and days\n\n  var dateWithoutDays = subDays(dateWithoutMonths, days + weeks * 7); // Subtract hours, minutes and seconds\n\n  var minutestoSub = minutes + hours * 60;\n  var secondstoSub = seconds + minutestoSub * 60;\n  var mstoSub = secondstoSub * 1000;\n  var finalDate = new Date(dateWithoutDays.getTime() - mstoSub);\n  return finalDate;\n}","import React from 'react';\nimport ContentLoader from 'react-content-loader';\n\nconst TimeseriesLoader = () => {\n  const windowWidth = window.innerWidth;\n  const width = windowWidth > 769 ? 480 : windowWidth;\n  const height = 160 * 5;\n\n  return (\n    <ContentLoader\n      viewBox={`0 0 ${width} ${height}`}\n      height={height}\n      width={width}\n      speed={2}\n    >\n      <circle cx={0.4 * width} cy={height / 2} r=\"5\" />\n      <circle cx={0.5 * width} cy={height / 2} r=\"5\" />\n      <circle cx={0.6 * width} cy={height / 2} r=\"5\" />\n    </ContentLoader>\n  );\n};\n\nexport default TimeseriesLoader;\n","import TimeseriesLoader from './loaders/Timeseries';\n\nimport {\n  TIMESERIES_CHART_TYPES,\n  TIMESERIES_LOOKBACKS,\n  STATE_NAMES,\n} from '../constants';\nimport useIsVisible from '../hooks/useIsVisible';\nimport {getIndiaYesterdayISO, parseIndiaDate} from '../utils/commonFunctions';\n\nimport {PinIcon, ReplyIcon} from '@primer/octicons-v2-react';\nimport classnames from 'classnames';\nimport {formatISO, sub} from 'date-fns';\nimport equal from 'fast-deep-equal';\nimport React, {useCallback, useMemo, useRef, lazy, Suspense} from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {useLocalStorage, useSessionStorage} from 'react-use';\n\nconst Timeseries = lazy(() => import('./Timeseries'));\n\nfunction TimeseriesExplorer({\n  stateCode,\n  timeseries,\n  date: timelineDate,\n  regionHighlighted,\n  setRegionHighlighted,\n  anchor,\n  setAnchor,\n  expandTable,\n}) {\n  const {t} = useTranslation();\n  const [lookback, setLookback] = useSessionStorage(\n    'timeseriesLookback',\n    TIMESERIES_LOOKBACKS.MONTH\n  );\n  const [chartType, setChartType] = useLocalStorage('chartType', 'total');\n  const explorerElement = useRef();\n  const isVisible = useIsVisible(explorerElement, {once: true});\n\n  const selectedRegion = useMemo(() => {\n    if (timeseries?.[regionHighlighted.stateCode]?.districts) {\n      return {\n        stateCode: regionHighlighted.stateCode,\n        districtName: regionHighlighted.districtName,\n      };\n    } else {\n      return {\n        stateCode: regionHighlighted.stateCode,\n        districtName: null,\n      };\n    }\n  }, [timeseries, regionHighlighted.stateCode, regionHighlighted.districtName]);\n\n  const selectedTimeseries = useMemo(() => {\n    if (selectedRegion.districtName) {\n      return timeseries?.[selectedRegion.stateCode]?.districts?.[\n        selectedRegion.districtName\n      ]?.dates;\n    } else {\n      return timeseries?.[selectedRegion.stateCode]?.dates;\n    }\n  }, [timeseries, selectedRegion.stateCode, selectedRegion.districtName]);\n\n  const regions = useMemo(() => {\n    const states = Object.keys(timeseries || {})\n      .filter((code) => code !== stateCode)\n      .sort((code1, code2) =>\n        STATE_NAMES[code1].localeCompare(STATE_NAMES[code2])\n      )\n      .map((code) => {\n        return {\n          stateCode: code,\n          districtName: null,\n        };\n      });\n    const districts = Object.keys(timeseries || {}).reduce((acc1, code) => {\n      return [\n        ...acc1,\n        ...Object.keys(timeseries?.[code]?.districts || {}).reduce(\n          (acc2, districtName) => {\n            return [\n              ...acc2,\n              {\n                stateCode: code,\n                districtName: districtName,\n              },\n            ];\n          },\n          []\n        ),\n      ];\n    }, []);\n\n    return [\n      {\n        stateCode: stateCode,\n        districtName: null,\n      },\n      ...states,\n      ...districts,\n    ];\n  }, [timeseries, stateCode]);\n\n  const dropdownRegions = useMemo(() => {\n    if (\n      regions.find(\n        (region) =>\n          region.stateCode === regionHighlighted.stateCode &&\n          region.districtName === regionHighlighted.districtName\n      )\n    )\n      return regions;\n    return [\n      ...regions,\n      {\n        stateCode: regionHighlighted.stateCode,\n        districtName: regionHighlighted.districtName,\n      },\n    ];\n  }, [regionHighlighted.stateCode, regionHighlighted.districtName, regions]);\n\n  const dates = useMemo(() => {\n    const today = timelineDate || getIndiaYesterdayISO();\n    const pastDates = Object.keys(selectedTimeseries || {}).filter(\n      (date) => date <= today\n    );\n\n    if (lookback === TIMESERIES_LOOKBACKS.TWO_WEEKS) {\n      const cutOffDate = formatISO(sub(parseIndiaDate(today), {weeks: 2}), {\n        representation: 'date',\n      });\n      return pastDates.filter((date) => date >= cutOffDate);\n    } else if (lookback === TIMESERIES_LOOKBACKS.MONTH) {\n      const cutOffDate = formatISO(sub(parseIndiaDate(today), {months: 1}), {\n        representation: 'date',\n      });\n      return pastDates.filter((date) => date >= cutOffDate);\n    }\n    return pastDates;\n  }, [selectedTimeseries, timelineDate, lookback]);\n\n  const handleChange = useCallback(\n    ({target}) => {\n      setRegionHighlighted(JSON.parse(target.value));\n    },\n    [setRegionHighlighted]\n  );\n\n  const resetDropdown = useCallback(() => {\n    setRegionHighlighted({\n      stateCode: stateCode,\n      districtName: null,\n    });\n  }, [stateCode, setRegionHighlighted]);\n\n  return (\n    <div\n      className={classnames(\n        'TimeseriesExplorer fadeInUp',\n        {\n          stickied: anchor === 'timeseries',\n        },\n        {expanded: expandTable}\n      )}\n      style={{display: anchor === 'mapexplorer' ? 'none' : ''}}\n      ref={explorerElement}\n    >\n      <div className=\"timeseries-header\">\n        <div\n          className={classnames('anchor', {\n            stickied: anchor === 'timeseries',\n          })}\n          onClick={\n            setAnchor &&\n            setAnchor.bind(this, anchor === 'timeseries' ? null : 'timeseries')\n          }\n        >\n          <PinIcon />\n        </div>\n\n        <h1>{t('Spread Trends')}</h1>\n        <div className=\"tabs\">\n          {Object.entries(TIMESERIES_CHART_TYPES).map(\n            ([ctype, value], index) => (\n              <div\n                className={`tab ${chartType === ctype ? 'focused' : ''}`}\n                key={ctype}\n                onClick={setChartType.bind(this, ctype)}\n              >\n                <h4>{t(value)}</h4>\n              </div>\n            )\n          )}\n        </div>\n      </div>\n\n      {dropdownRegions && (\n        <div className=\"state-selection\">\n          <div className=\"dropdown\">\n            <select\n              value={JSON.stringify(selectedRegion)}\n              onChange={handleChange}\n            >\n              {dropdownRegions\n                .filter(\n                  (region) =>\n                    STATE_NAMES[region.stateCode] !== region.districtName\n                )\n                .map((region) => {\n                  return (\n                    <option\n                      value={JSON.stringify(region)}\n                      key={`${region.stateCode}-${region.districtName}`}\n                    >\n                      {region.districtName\n                        ? t(region.districtName)\n                        : t(STATE_NAMES[region.stateCode])}\n                    </option>\n                  );\n                })}\n            </select>\n          </div>\n          <div className=\"reset-icon\" onClick={resetDropdown}>\n            <ReplyIcon />\n          </div>\n        </div>\n      )}\n\n      {isVisible && (\n        <Suspense fallback={<TimeseriesLoader />}>\n          <Timeseries\n            timeseries={selectedTimeseries}\n            regionHighlighted={selectedRegion}\n            {...{dates, chartType}}\n          />\n        </Suspense>\n      )}\n\n      {!isVisible && <div style={{height: '50rem'}} />}\n\n      <div className=\"pills\">\n        {Object.values(TIMESERIES_LOOKBACKS).map((option) => (\n          <button\n            key={option}\n            type=\"button\"\n            className={classnames({selected: lookback === option})}\n            onClick={() => setLookback(option)}\n          >\n            {t(option)}\n          </button>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nconst isEqual = (prevProps, currProps) => {\n  if (currProps.forceRender) {\n    return false;\n  } else if (!currProps.timeseries && prevProps.timeseries) {\n    return true;\n  } else if (currProps.timeseries && !prevProps.timeseries) {\n    return false;\n  } else if (\n    !equal(\n      currProps.regionHighlighted.stateCode,\n      prevProps.regionHighlighted.stateCode\n    )\n  ) {\n    return false;\n  } else if (\n    !equal(\n      currProps.regionHighlighted.districtName,\n      prevProps.regionHighlighted.districtName\n    )\n  ) {\n    return false;\n  } else if (!equal(currProps.date, prevProps.date)) {\n    return false;\n  } else if (!equal(currProps.anchor, prevProps.anchor)) {\n    return false;\n  } else if (!equal(currProps.expandTable, prevProps.expandTable)) {\n    return false;\n  }\n  return true;\n};\n\nexport default React.memo(TimeseriesExplorer, isEqual);\n","export default (): string =>\n  Math.random()\n    .toString(36)\n    .substring(6)\n","import * as React from 'react'\n\nimport uid from '../shared/uid'\nimport { IContentLoaderProps } from './'\n\nconst SVG: React.FC<IContentLoaderProps> = ({\n  animate,\n  backgroundColor,\n  backgroundOpacity,\n  baseUrl,\n  children,\n  foregroundColor,\n  foregroundOpacity,\n  gradientRatio,\n  uniqueKey,\n  interval,\n  rtl,\n  speed,\n  style,\n  title,\n  ...props\n}) => {\n  const fixedId = uniqueKey || uid()\n  const idClip = `${fixedId}-diff`\n  const idGradient = `${fixedId}-animated-diff`\n  const idAria = `${fixedId}-aria`\n\n  const rtlStyle = rtl ? { transform: 'scaleX(-1)' } : null\n  const keyTimes = `0; ${interval}; 1`\n  const dur = `${speed}s`\n\n  return (\n    <svg\n      aria-labelledby={idAria}\n      role=\"img\"\n      style={{ ...style, ...rtlStyle }}\n      {...props}\n    >\n      {title ? <title id={idAria}>{title}</title> : null}\n      <rect\n        role=\"presentation\"\n        x=\"0\"\n        y=\"0\"\n        width=\"100%\"\n        height=\"100%\"\n        clipPath={`url(${baseUrl}#${idClip})`}\n        style={{ fill: `url(${baseUrl}#${idGradient})` }}\n      />\n\n      <defs role=\"presentation\">\n        <clipPath id={idClip}>{children}</clipPath>\n\n        <linearGradient id={idGradient}>\n          <stop\n            offset=\"0%\"\n            stopColor={backgroundColor}\n            stopOpacity={backgroundOpacity}\n          >\n            {animate && (\n              <animate\n                attributeName=\"offset\"\n                values={`${-gradientRatio}; ${-gradientRatio}; 1`}\n                keyTimes={keyTimes}\n                dur={dur}\n                repeatCount=\"indefinite\"\n              />\n            )}\n          </stop>\n\n          <stop\n            offset=\"50%\"\n            stopColor={foregroundColor}\n            stopOpacity={foregroundOpacity}\n          >\n            {animate && (\n              <animate\n                attributeName=\"offset\"\n                values={`${-gradientRatio / 2}; ${-gradientRatio / 2}; ${1 +\n                  gradientRatio / 2}`}\n                keyTimes={keyTimes}\n                dur={dur}\n                repeatCount=\"indefinite\"\n              />\n            )}\n          </stop>\n\n          <stop\n            offset=\"100%\"\n            stopColor={backgroundColor}\n            stopOpacity={backgroundOpacity}\n          >\n            {animate && (\n              <animate\n                attributeName=\"offset\"\n                values={`0; 0; ${1 + gradientRatio}`}\n                keyTimes={keyTimes}\n                dur={dur}\n                repeatCount=\"indefinite\"\n              />\n            )}\n          </stop>\n        </linearGradient>\n      </defs>\n    </svg>\n  )\n}\n\nSVG.defaultProps = {\n  animate: true,\n  backgroundColor: '#f5f6f7',\n  backgroundOpacity: 1,\n  baseUrl: '',\n  foregroundColor: '#eee',\n  foregroundOpacity: 1,\n  gradientRatio: 2,\n  id: null,\n  interval: 0.25,\n  rtl: false,\n  speed: 1.2,\n  style: {},\n  title: 'Loading...',\n}\n\nexport default SVG\n","import * as React from 'react'\n\nimport { Facebook, IContentLoaderProps } from '.'\nimport Svg from './Svg'\n\nconst ContentLoader: React.FC<IContentLoaderProps> = props =>\n  props.children ? <Svg {...props} /> : <Facebook {...props} />\n\nexport default ContentLoader\n","import * as React from 'react'\n\nimport { IContentLoaderProps } from '..'\nimport ContentLoader from '../ContentLoader'\n\nconst ReactContentLoaderFacebook: React.FC<IContentLoaderProps> = props => (\n  <ContentLoader viewBox=\"0 0 476 124\" {...props}>\n    <rect x=\"48\" y=\"8\" width=\"88\" height=\"6\" rx=\"3\" />\n    <rect x=\"48\" y=\"26\" width=\"52\" height=\"6\" rx=\"3\" />\n    <rect x=\"0\" y=\"56\" width=\"410\" height=\"6\" rx=\"3\" />\n    <rect x=\"0\" y=\"72\" width=\"380\" height=\"6\" rx=\"3\" />\n    <rect x=\"0\" y=\"88\" width=\"178\" height=\"6\" rx=\"3\" />\n    <circle cx=\"20\" cy=\"20\" r=\"20\" />\n  </ContentLoader>\n)\n\nexport default ReactContentLoaderFacebook\n"],"sourceRoot":""}