{"version":3,"sources":["../node_modules/fast-deep-equal/index.js","components/Tooltip.js","components/snippets/Icons.js","../../src/types.ts","../../src/index.ts","components/loaders/MapVisualizer.js","components/StatisticDropdown.js","components/MapExplorer.js"],"names":["module","exports","equal","a","b","constructor","length","i","keys","Array","isArray","RegExp","source","flags","valueOf","Object","prototype","toString","hasOwnProperty","call","key","Tooltip","children","message","hold","childProps","handleClick","useCallback","e","stopPropagation","className","content","dangerouslySetInnerHTML","__html","split","map","text","join","arrow","animation","touch","onClick","Delta7Icon","size","PerLakhIcon","DistrictIcon","LEFT","RIGHT","UP","DOWN","defaultProps","delta","preventDefaultTouchmoveEvent","rotationAngle","trackMouse","trackTouch","initialState","first","initial","start","swiping","xy","mouseMove","mouseUp","touchEnd","touchMove","touchStart","absX","deltaX","deltaY","angle","pos","angleInRadians","Math","onStart","event","set","props","document","rotateXYByAngle","clientX","clientY","onMove","x","y","state","absY","time","velocity","vxvy","dir","getDirection","eventData","cancelablePageSwipe","onEnd","onSwipedDir","cleanUpMouse","onUp","attachTouch","el","passive","cleanup","tls","h","output","ref","addState","handlerProps","useSwipeable","options","transientState","React","transientProps","useMemo","getHandlers","stateSetter","handlers","updateTransientState","MapVisualizerLoader","width","statistic","windowWidth","window","innerWidth","mapHeight","height","MAP_LEGEND_HEIGHT","viewBox","speed","backgroundColor","STATISTIC_CONFIGS","color","cx","cy","r","StatisticDropdown","currentStatistic","isPerLakh","delta7Mode","mapStatistic","setMapStatistic","mapType","hideDistrictTestData","hideVaccinated","zoneColor","t","useTranslation","useMeasure","wrapperRef","selectRef","useRef","currentStatisticConfig","statistics","filteredStatistics","TABLE_STATISTICS_EXPANDED","filter","MAP_TYPES","COUNTRY","category","includes","handleChange","target","value","useEffect","tempSelect","createElement","tempOption","textContent","displayName","style","cssText","appendChild","current","after","tempSelectWidth","getBoundingClientRect","remove","statisticColor","background","outlineColor","onChange","statisticConfig","capitalize","nonLinear","showDelta","onlyDelta7","isEqual","prevProps","currProps","memo","MapVisualizer","lazy","retry","MapExplorer","stateCode","mapCode","data","mapView","MAP_VIEWS","DISTRICTS","setMapView","regionHighlighted","setRegionHighlighted","anchor","setAnchor","expandTable","lastDataDate","hideDistrictData","mapExplorerRef","useWindowSize","useSessionStorage","setIsPerLakh","setDelta7Mode","mapMeta","MAP_META","mapData","isDistrictView","STATE","hoveredRegion","hoveredData","districtName","districts","produce","draft","name","STATE_NAMES","handlePerLakhClick","handleDistrictClick","newMapView","STATES","history","useHistory","panelRef","location","hash","scrollIntoView","trail","styles","element","index","push","animationDelay","getMapStatistic","type","getStatistic","expiredDate","normalizedByPopulationPer","canBeNaN","currentVal","isNaN","spring","useSpring","total","config","tension","SPRING_CONFIG_NUMBERS","mapStatistics","MAP_STATISTICS","handleStatisticChange","direction","currentIndex","indexOf","toIndex","swipeHandlers","onSwipedLeft","bind","this","onSwipedRight","mapViz","mapConfig","colorScale","MAP_VIZS","CHOROPLETH","BUBBLES","handleDeltaClick","stickied","transformStatistic","val","transformFn","classnames","hidden","display","UNKNOWN_DISTRICT_KEY","div","to","formatNumber","format","disabled","fallback","clientWidth","TT","meta"],"mappings":"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","file":"static/js/6.1962d264.chunk.js","sourcesContent":["'use strict';\n\n// do not edit .js files directly - edit src/index.jst\n\n\n\nmodule.exports = function equal(a, b) {\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    if (a.constructor !== b.constructor) return false;\n\n    var length, i, keys;\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n\n\n    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;\n    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();\n\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) return false;\n\n    for (i = length; i-- !== 0;)\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n\n    for (i = length; i-- !== 0;) {\n      var key = keys[i];\n\n      if (!equal(a[key], b[key])) return false;\n    }\n\n    return true;\n  }\n\n  // true if both NaN, false otherwise\n  return a!==a && b!==b;\n};\n","import Tippy from '@tippyjs/react';\nimport {useCallback} from 'react';\n\nimport 'tippy.js/dist/tippy.css';\nimport 'tippy.js/animations/shift-away.css';\n\nfunction Tooltip({children, message, hold = false, childProps = {}}) {\n  const handleClick = useCallback((e) => e.stopPropagation(), []);\n\n  return (\n    <Tippy\n      className=\"Tooltip\"\n      content={\n        typeof message === 'string' ? (\n          <p\n            className=\"message\"\n            dangerouslySetInnerHTML={{\n              __html: message\n                .split('\\n')\n                .map((text) => `<div>${text}</div>`)\n                .join(''),\n            }}\n          ></p>\n        ) : (\n          message\n        )\n      }\n      arrow={false}\n      animation=\"shift-away\"\n      touch={hold ? ['hold', 300] : true}\n    >\n      <div onClick={handleClick} {...childProps}>\n        {children}\n      </div>\n    </Tippy>\n  );\n}\n\nexport default Tooltip;\n","import {OrganizationIcon, PeopleIcon, PulseIcon} from '@primer/octicons-react';\n\nexport const Delta7Icon = () => (\n  <div className=\"Icons\">\n    <PulseIcon size={16} />\n    <span>7D</span>\n  </div>\n);\n\nexport const PerLakhIcon = () => (\n  <div className=\"Icons\">\n    <PeopleIcon size={16} />\n    <span>1L</span>\n  </div>\n);\n\nexport const DistrictIcon = () => (\n  <div className=\"Icons\">\n    <OrganizationIcon size={16} />\n  </div>\n);\n","import * as React from \"react\";\n\nexport const LEFT = \"Left\";\nexport const RIGHT = \"Right\";\nexport const UP = \"Up\";\nexport const DOWN = \"Down\";\nexport type HandledEvents = React.MouseEvent | TouchEvent | MouseEvent;\nexport type Vector2 = [number, number];\nexport type SwipeDirections =\n  | typeof LEFT\n  | typeof RIGHT\n  | typeof UP\n  | typeof DOWN;\nexport interface SwipeEventData {\n  absX: number;\n  absY: number;\n  deltaX: number;\n  deltaY: number;\n  dir: SwipeDirections;\n  event: HandledEvents;\n  first: boolean;\n  initial: Vector2;\n  velocity: number;\n  vxvy: Vector2;\n}\n\nexport type SwipeCallback = (eventData: SwipeEventData) => void;\nexport type TapCallback = ({ event }: { event: HandledEvents }) => void;\n\nexport type SwipeableCallbacks = {\n  // Event handler/callbacks\n  onSwipeStart: SwipeCallback;\n  onSwiped: SwipeCallback;\n  onSwipedDown: SwipeCallback;\n  onSwipedLeft: SwipeCallback;\n  onSwipedRight: SwipeCallback;\n  onSwipedUp: SwipeCallback;\n  onSwiping: SwipeCallback;\n  onTap: TapCallback;\n};\n\n// Configuration Options\nexport interface ConfigurationOptions {\n  delta: number;\n  preventDefaultTouchmoveEvent: boolean;\n  rotationAngle: number;\n  trackMouse: boolean;\n  trackTouch: boolean;\n}\n\nexport type SwipeableProps = Partial<SwipeableCallbacks & ConfigurationOptions>;\n\nexport type SwipeablePropsWithDefaultOptions = Partial<SwipeableCallbacks> &\n  ConfigurationOptions;\n\nexport interface SwipeableHandlers {\n  ref(element: HTMLElement | null): void;\n  onMouseDown?(event: React.MouseEvent): void;\n}\n\nexport type SwipeableState = {\n  cleanUpTouch?: () => void;\n  el?: HTMLElement;\n  eventData?: SwipeEventData;\n  first: boolean;\n  initial: Vector2;\n  start: number;\n  swiping: boolean;\n  xy: Vector2;\n};\n\nexport type StateSetter = (\n  state: SwipeableState,\n  props: SwipeablePropsWithDefaultOptions\n) => SwipeableState;\nexport type Setter = (stateSetter: StateSetter) => void;\nexport type AttachTouch = (el: HTMLElement, passive: boolean) => () => void;\n","/* global document */\nimport * as React from \"react\";\nimport {\n  AttachTouch,\n  SwipeDirections,\n  DOWN,\n  SwipeEventData,\n  HandledEvents,\n  LEFT,\n  RIGHT,\n  Setter,\n  SwipeableHandlers,\n  SwipeableProps,\n  SwipeablePropsWithDefaultOptions,\n  SwipeableState,\n  SwipeCallback,\n  TapCallback,\n  UP,\n  Vector2,\n} from \"./types\";\n\nexport {\n  LEFT,\n  RIGHT,\n  UP,\n  DOWN,\n  SwipeDirections,\n  SwipeEventData,\n  SwipeCallback,\n  TapCallback,\n  SwipeableHandlers,\n  SwipeableProps,\n  Vector2,\n};\n\nconst defaultProps = {\n  delta: 10,\n  preventDefaultTouchmoveEvent: false,\n  rotationAngle: 0,\n  trackMouse: false,\n  trackTouch: true,\n};\nconst initialState: SwipeableState = {\n  first: true,\n  initial: [0, 0],\n  start: 0,\n  swiping: false,\n  xy: [0, 0],\n};\nconst mouseMove = \"mousemove\";\nconst mouseUp = \"mouseup\";\nconst touchEnd = \"touchend\";\nconst touchMove = \"touchmove\";\nconst touchStart = \"touchstart\";\n\nfunction getDirection(\n  absX: number,\n  absY: number,\n  deltaX: number,\n  deltaY: number\n): SwipeDirections {\n  if (absX > absY) {\n    if (deltaX > 0) {\n      return RIGHT;\n    }\n    return LEFT;\n  } else if (deltaY > 0) {\n    return DOWN;\n  }\n  return UP;\n}\n\nfunction rotateXYByAngle(pos: Vector2, angle: number): Vector2 {\n  if (angle === 0) return pos;\n  const angleInRadians = (Math.PI / 180) * angle;\n  const x =\n    pos[0] * Math.cos(angleInRadians) + pos[1] * Math.sin(angleInRadians);\n  const y =\n    pos[1] * Math.cos(angleInRadians) - pos[0] * Math.sin(angleInRadians);\n  return [x, y];\n}\n\nfunction getHandlers(\n  set: Setter,\n  handlerProps: { trackMouse: boolean | undefined }\n): [\n  {\n    ref: (element: HTMLElement | null) => void;\n    onMouseDown?: (event: React.MouseEvent) => void;\n  },\n  AttachTouch\n] {\n  const onStart = (event: HandledEvents) => {\n    // if more than a single touch don't track, for now...\n    if (event && \"touches\" in event && event.touches.length > 1) return;\n\n    set((state, props) => {\n      // setup mouse listeners on document to track swipe since swipe can leave container\n      if (props.trackMouse) {\n        document.addEventListener(mouseMove, onMove);\n        document.addEventListener(mouseUp, onUp);\n      }\n      const { clientX, clientY } =\n        \"touches\" in event ? event.touches[0] : event;\n      const xy = rotateXYByAngle([clientX, clientY], props.rotationAngle);\n      return {\n        ...state,\n        ...initialState,\n        initial: [...xy],\n        xy,\n        start: event.timeStamp || 0,\n      };\n    });\n  };\n\n  const onMove = (event: HandledEvents) => {\n    set((state, props) => {\n      // Discount a swipe if additional touches are present after\n      // a swipe has started.\n      if (\"touches\" in event && event.touches.length > 1) {\n        return state;\n      }\n      const { clientX, clientY } =\n        \"touches\" in event ? event.touches[0] : event;\n      const [x, y] = rotateXYByAngle([clientX, clientY], props.rotationAngle);\n      const deltaX = x - state.xy[0];\n      const deltaY = y - state.xy[1];\n      const absX = Math.abs(deltaX);\n      const absY = Math.abs(deltaY);\n      const time = (event.timeStamp || 0) - state.start;\n      const velocity = Math.sqrt(absX * absX + absY * absY) / (time || 1);\n      const vxvy: Vector2 = [deltaX / (time || 1), deltaY / (time || 1)];\n\n      // if swipe is under delta and we have not started to track a swipe: skip update\n      if (absX < props.delta && absY < props.delta && !state.swiping)\n        return state;\n\n      const dir = getDirection(absX, absY, deltaX, deltaY);\n      const eventData = {\n        absX,\n        absY,\n        deltaX,\n        deltaY,\n        dir,\n        event,\n        first: state.first,\n        initial: state.initial,\n        velocity,\n        vxvy,\n      };\n\n      // call onSwipeStart if present and is first swipe event\n      eventData.first && props.onSwipeStart && props.onSwipeStart(eventData);\n\n      // Call onSwiping if present\n      props.onSwiping && props.onSwiping(eventData);\n\n      // track if a swipe is cancelable(handler for swiping or swiped(dir) exists)\n      // so we can call preventDefault if needed\n      let cancelablePageSwipe = false;\n      if (props.onSwiping || props.onSwiped || `onSwiped${dir}` in props) {\n        cancelablePageSwipe = true;\n      }\n\n      if (\n        cancelablePageSwipe &&\n        props.preventDefaultTouchmoveEvent &&\n        props.trackTouch &&\n        event.cancelable\n      )\n        event.preventDefault();\n\n      return {\n        ...state,\n        // first is now always false\n        first: false,\n        eventData,\n        swiping: true,\n      };\n    });\n  };\n\n  const onEnd = (event: HandledEvents) => {\n    set((state, props) => {\n      let eventData: SwipeEventData | undefined;\n      if (state.swiping && state.eventData) {\n        eventData = { ...state.eventData, event };\n        props.onSwiped && props.onSwiped(eventData);\n\n        const onSwipedDir = `onSwiped${eventData.dir}`;\n        if (onSwipedDir in props) {\n          ((props as any)[onSwipedDir] as SwipeCallback)(eventData);\n        }\n      } else {\n        props.onTap && props.onTap({ event });\n      }\n      return { ...state, ...initialState, eventData };\n    });\n  };\n\n  const cleanUpMouse = () => {\n    // safe to just call removeEventListener\n    document.removeEventListener(mouseMove, onMove);\n    document.removeEventListener(mouseUp, onUp);\n  };\n\n  const onUp = (e: HandledEvents) => {\n    cleanUpMouse();\n    onEnd(e);\n  };\n\n  /**\n   * Switch of \"passive\" property for now.\n   * When `preventDefaultTouchmoveEvent` is:\n   * - true => { passive: false }\n   * - false => { passive: true }\n   *\n   * Could take entire `addEventListener` options object as a param later?\n   */\n  const attachTouch: AttachTouch = (el, passive) => {\n    let cleanup = () => {};\n    if (el && el.addEventListener) {\n      // attach touch event listeners and handlers\n      const tls: [\n        typeof touchStart | typeof touchMove | typeof touchEnd,\n        (e: HandledEvents) => void\n      ][] = [\n        [touchStart, onStart],\n        [touchMove, onMove],\n        [touchEnd, onEnd],\n      ];\n      tls.forEach(([e, h]) => el.addEventListener(e, h, { passive }));\n      // return properly scoped cleanup method for removing listeners, options not required\n      cleanup = () => tls.forEach(([e, h]) => el.removeEventListener(e, h));\n    }\n    return cleanup;\n  };\n\n  const onRef = (el: HTMLElement | null) => {\n    // \"inline\" ref functions are called twice on render, once with null then again with DOM element\n    // ignore null here\n    if (el === null) return;\n    set((state, props) => {\n      // if the same DOM el as previous just return state\n      if (state.el === el) return state;\n\n      const addState: { cleanUpTouch?: () => void } = {};\n      // if new DOM el clean up old DOM and reset cleanUpTouch\n      if (state.el && state.el !== el && state.cleanUpTouch) {\n        state.cleanUpTouch();\n        addState.cleanUpTouch = undefined;\n      }\n      // only attach if we want to track touch\n      if (props.trackTouch && el) {\n        addState.cleanUpTouch = attachTouch(\n          el,\n          !props.preventDefaultTouchmoveEvent\n        );\n      }\n\n      // store event attached DOM el for comparison, clean up, and re-attachment\n      return { ...state, el, ...addState };\n    });\n  };\n\n  // set ref callback to attach touch event listeners\n  const output: { ref: typeof onRef; onMouseDown?: typeof onStart } = {\n    ref: onRef,\n  };\n\n  // if track mouse attach mouse down listener\n  if (handlerProps.trackMouse) {\n    output.onMouseDown = onStart;\n  }\n\n  return [output, attachTouch];\n}\n\nfunction updateTransientState(\n  state: SwipeableState,\n  props: SwipeableProps,\n  attachTouch: AttachTouch\n) {\n  const addState: { cleanUpTouch?(): void } = {};\n  // clean up touch handlers if no longer tracking touches\n  if (!props.trackTouch && state.cleanUpTouch) {\n    state.cleanUpTouch();\n    addState.cleanUpTouch = undefined;\n  } else if (props.trackTouch && !state.cleanUpTouch) {\n    // attach/re-attach touch handlers\n    if (state.el) {\n      addState.cleanUpTouch = attachTouch(\n        state.el,\n        !props.preventDefaultTouchmoveEvent\n      );\n    }\n  }\n  return { ...state, ...addState };\n}\n\nexport function useSwipeable(options: SwipeableProps): SwipeableHandlers {\n  const { trackMouse } = options;\n  const transientState = React.useRef({ ...initialState });\n  const transientProps = React.useRef<SwipeablePropsWithDefaultOptions>({\n    ...defaultProps,\n  });\n  transientProps.current = { ...defaultProps, ...options };\n\n  const [handlers, attachTouch] = React.useMemo(\n    () =>\n      getHandlers(\n        (stateSetter) =>\n          (transientState.current = stateSetter(\n            transientState.current,\n            transientProps.current\n          )),\n        { trackMouse }\n      ),\n    [trackMouse]\n  );\n\n  transientState.current = updateTransientState(\n    transientState.current,\n    transientProps.current,\n    attachTouch\n  );\n\n  return handlers;\n}\n","import {STATISTIC_CONFIGS, MAP_LEGEND_HEIGHT} from '../../constants';\n\nimport ContentLoader from 'react-content-loader';\n\n// Margins as declared in CSS\nexport const MAP_BUFFER_MARGINS = 42;\nexport const INDIA_ASPECT_RATIO = 0.885;\n\nconst MapVisualizerLoader = ({width, statistic}) => {\n  const windowWidth = window.innerWidth;\n  // Default width for loader\n  if (!width) width = windowWidth >= 769 ? 480 : windowWidth;\n  // From CSS\n  const scalingFactor = windowWidth >= 769 ? 0.9 : 1;\n  const mapHeight = (scalingFactor * width) / INDIA_ASPECT_RATIO;\n  const height = MAP_BUFFER_MARGINS + MAP_LEGEND_HEIGHT + mapHeight;\n  return (\n    <ContentLoader\n      viewBox={`0 0 ${width} ${height}`}\n      height={height}\n      width={width}\n      speed={2}\n      backgroundColor={STATISTIC_CONFIGS[statistic].color}\n    >\n      <circle cx={0.4 * width} cy={height / 2} r=\"5\" />\n      <circle cx={0.5 * width} cy={height / 2} r=\"5\" />\n      <circle cx={0.6 * width} cy={height / 2} r=\"5\" />\n    </ContentLoader>\n  );\n};\n\nexport default MapVisualizerLoader;\n","import {\n  MAP_TYPES,\n  TABLE_STATISTICS_EXPANDED,\n  STATISTIC_CONFIGS,\n} from '../constants';\nimport {capitalize} from '../utils/commonFunctions';\n\nimport equal from 'fast-deep-equal';\nimport {memo, useEffect, useCallback, useMemo, useRef} from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {useMeasure} from 'react-use';\n\nconst StatisticDropdown = ({\n  currentStatistic,\n  isPerLakh,\n  delta7Mode,\n  mapStatistic,\n  setMapStatistic,\n  mapType,\n  hideDistrictTestData,\n  hideVaccinated,\n  zoneColor,\n}) => {\n  const {t} = useTranslation();\n  const [wrapperRef, {width}] = useMeasure();\n  const selectRef = useRef();\n\n  const currentStatisticConfig = STATISTIC_CONFIGS[currentStatistic];\n\n  const statistics = useMemo(() => {\n    const filteredStatistics = TABLE_STATISTICS_EXPANDED.filter(\n      (statistic) =>\n        (mapType === MAP_TYPES.COUNTRY ||\n          STATISTIC_CONFIGS[statistic]?.category !== 'tested' ||\n          !hideDistrictTestData) &&\n        (STATISTIC_CONFIGS[statistic]?.category !== 'vaccinated' ||\n          !hideVaccinated)\n    );\n    return filteredStatistics.includes(currentStatistic)\n      ? filteredStatistics\n      : [currentStatistic, ...filteredStatistics];\n  }, [currentStatistic, mapType, hideDistrictTestData, hideVaccinated]);\n\n  const handleChange = useCallback(\n    (event) => {\n      setMapStatistic(event.target.value);\n    },\n    [setMapStatistic]\n  );\n\n  useEffect(() => {\n    const tempSelect = document.createElement('select');\n    const tempOption = document.createElement('option');\n\n    tempOption.textContent = STATISTIC_CONFIGS[mapStatistic]?.displayName;\n    tempSelect.style.cssText += `\n      visibility: hidden;\n      position: fixed;\n      `;\n\n    tempSelect.appendChild(tempOption);\n    selectRef.current.after(tempSelect);\n\n    const tempSelectWidth = tempSelect.getBoundingClientRect().width;\n    if (tempSelectWidth > 0) {\n      selectRef.current.style.width = `${tempSelectWidth + 2}px`;\n    }\n    tempSelect.remove();\n  }, [width, mapStatistic]);\n\n  const statisticColor = zoneColor || currentStatisticConfig?.color;\n\n  return (\n    <div className=\"StatisticDropdown\" ref={wrapperRef}>\n      <select\n        ref={selectRef}\n        value={currentStatistic}\n        className={currentStatistic}\n        style={{\n          color: statisticColor,\n          background: statisticColor + '20',\n          outlineColor: statisticColor + '40',\n        }}\n        onChange={handleChange}\n      >\n        {statistics.map((statistic) => {\n          const statisticConfig = STATISTIC_CONFIGS[statistic];\n          return (\n            <option key={statistic} value={statistic}>\n              {t(capitalize(statisticConfig?.displayName))}\n            </option>\n          );\n        })}\n      </select>\n      <span>{`${\n        isPerLakh &&\n        !currentStatisticConfig?.nonLinear &&\n        mapStatistic !== 'population'\n          ? ` ${t('per lakh')}`\n          : ''\n      }${\n        (delta7Mode && currentStatisticConfig?.showDelta) ||\n        currentStatisticConfig?.onlyDelta7\n          ? ` ${t('in last 7 days')}`\n          : ''\n      }`}</span>\n    </div>\n  );\n};\n\nconst isEqual = (prevProps, currProps) => {\n  if (!equal(prevProps.currentStatistic, currProps.currentStatistic)) {\n    return false;\n  } else if (!equal(prevProps.isPerLakh, currProps.isPerLakh)) {\n    return false;\n  } else if (!equal(prevProps.delta7Mode, currProps.delta7Mode)) {\n    return false;\n  } else if (!equal(prevProps.mapStatistic, currProps.mapStatistic)) {\n    return false;\n  } else if (!equal(prevProps.mapType, currProps.mapType)) {\n    return false;\n  } else if (\n    !equal(prevProps.hideDistrictTestData, currProps.hideDistrictTestData)\n  ) {\n    return false;\n  } else if (!equal(prevProps.hideVaccinated, currProps.hideVaccinated)) {\n    return false;\n  } else if (!equal(prevProps.zoneColor, currProps.zoneColor)) {\n    return false;\n  }\n  return true;\n};\n\nexport default memo(StatisticDropdown, isEqual);\n","import MapVisualizerLoader from './loaders/MapVisualizer';\nimport {Delta7Icon, PerLakhIcon} from './snippets/Icons';\nimport StatisticDropdown from './StatisticDropdown';\nimport Tooltip from './Tooltip';\n\nimport {\n  MAP_META,\n  MAP_TYPES,\n  MAP_VIEWS,\n  MAP_VIZS,\n  MAP_STATISTICS,\n  SPRING_CONFIG_NUMBERS,\n  STATE_NAMES,\n  STATISTIC_CONFIGS,\n  UNKNOWN_DISTRICT_KEY,\n} from '../constants';\nimport {formatNumber, getStatistic, retry} from '../utils/commonFunctions';\n\nimport {\n  ArrowLeftIcon,\n  DotFillIcon,\n  PinIcon,\n  OrganizationIcon,\n} from '@primer/octicons-react';\nimport classnames from 'classnames';\nimport equal from 'fast-deep-equal';\nimport produce from 'immer';\nimport {\n  memo,\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  Suspense,\n  lazy,\n} from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {useHistory} from 'react-router-dom';\nimport {animated, useSpring} from 'react-spring';\nimport {useSwipeable} from 'react-swipeable';\nimport {useSessionStorage, useWindowSize} from 'react-use';\n\nconst MapVisualizer = lazy(() => retry(() => import('./MapVisualizer')));\n\nfunction MapExplorer({\n  stateCode: mapCode = 'TT',\n  data,\n  mapView = MAP_VIEWS.DISTRICTS,\n  setMapView,\n  mapStatistic,\n  setMapStatistic,\n  regionHighlighted,\n  setRegionHighlighted,\n  anchor,\n  setAnchor,\n  expandTable = false,\n  lastDataDate,\n  hideDistrictData = false,\n  hideDistrictTestData = true,\n  hideVaccinated = false,\n}) {\n  const {t} = useTranslation();\n  const mapExplorerRef = useRef();\n  const {width} = useWindowSize();\n\n  const [isPerLakh, setIsPerLakh] = useSessionStorage('isPerLakhMap', false);\n  const [delta7Mode, setDelta7Mode] = useSessionStorage('delta7ModeMap', false);\n\n  const mapMeta = MAP_META[mapCode];\n  const mapData =\n    mapMeta.mapType === MAP_TYPES.COUNTRY ? data : {[mapCode]: data[mapCode]};\n\n  const statisticConfig = STATISTIC_CONFIGS[mapStatistic];\n\n  const isDistrictView =\n    mapView === MAP_VIEWS.DISTRICTS &&\n    (mapMeta.mapType === MAP_TYPES.STATE ||\n      (!hideDistrictData &&\n        !(hideDistrictTestData && statisticConfig?.category === 'tested')));\n\n  const hoveredRegion = useMemo(() => {\n    const hoveredData =\n      (regionHighlighted.districtName\n        ? data[regionHighlighted.stateCode]?.districts?.[\n            regionHighlighted.districtName\n          ]\n        : data[regionHighlighted.stateCode]) || {};\n\n    return produce(hoveredData, (draft) => {\n      draft.name =\n        regionHighlighted.districtName ||\n        STATE_NAMES[regionHighlighted.stateCode];\n    });\n  }, [data, regionHighlighted.stateCode, regionHighlighted.districtName]);\n\n  const handlePerLakhClick = useCallback(() => {\n    const statisticConfig = STATISTIC_CONFIGS[mapStatistic];\n    if (statisticConfig?.nonLinear || mapStatistic === 'population') {\n      return;\n    }\n    setIsPerLakh((isPerLakh) => !isPerLakh);\n  }, [mapStatistic, setIsPerLakh]);\n\n  const handleDistrictClick = useCallback(() => {\n    const newMapView =\n      mapView === MAP_VIEWS.DISTRICTS ? MAP_VIEWS.STATES : MAP_VIEWS.DISTRICTS;\n    if (newMapView === MAP_VIEWS.STATES) {\n      setRegionHighlighted({\n        stateCode: regionHighlighted.stateCode,\n        districtName: null,\n      });\n    }\n    setMapView(newMapView);\n  }, [mapView, regionHighlighted.stateCode, setMapView, setRegionHighlighted]);\n\n  const history = useHistory();\n  const panelRef = useRef();\n\n  useEffect(() => {\n    if (history.location.hash === '#MapExplorer') {\n      panelRef.current.scrollIntoView();\n    }\n  }, [history]);\n\n  const trail = useMemo(() => {\n    const styles = [];\n\n    [0, 0, 0, 0, 0, 0, 0].map((element, index) => {\n      styles.push({\n        animationDelay: `${index * 250}ms`,\n      });\n      return null;\n    });\n\n    return styles;\n  }, []);\n\n  const getMapStatistic = useCallback(\n    (data) => {\n      const statisticConfig = STATISTIC_CONFIGS[mapStatistic];\n\n      const type =\n        (statisticConfig?.showDelta && delta7Mode) ||\n        statisticConfig?.onlyDelta7\n          ? 'delta7'\n          : 'total';\n\n      return getStatistic(data, type, mapStatistic, {\n        expiredDate: lastDataDate,\n        normalizedByPopulationPer:\n          isPerLakh && mapStatistic != 'population' ? 'lakh' : null,\n        canBeNaN: true,\n      });\n    },\n    [mapStatistic, isPerLakh, lastDataDate, delta7Mode]\n  );\n\n  let currentVal = getMapStatistic(hoveredRegion);\n  if (isNaN(currentVal)) currentVal = '-';\n\n  const spring = useSpring({\n    total: currentVal,\n    config: {tension: 250, ...SPRING_CONFIG_NUMBERS},\n  });\n\n  const mapStatistics = useMemo(\n    () =>\n      MAP_STATISTICS.filter(\n        (statistic) =>\n          !(STATISTIC_CONFIGS[statistic]?.category === 'vaccinated') ||\n          !hideVaccinated\n      ),\n    [hideVaccinated]\n  );\n\n  const handleStatisticChange = useCallback(\n    (direction) => {\n      const currentIndex = mapStatistics.indexOf(mapStatistic);\n      const toIndex =\n        (mapStatistics.length + currentIndex + direction) %\n        mapStatistics.length;\n      setMapStatistic(mapStatistics[toIndex]);\n    },\n    [mapStatistic, mapStatistics, setMapStatistic]\n  );\n\n  const swipeHandlers = useSwipeable({\n    onSwipedLeft: handleStatisticChange.bind(this, 1),\n    onSwipedRight: handleStatisticChange.bind(this, -1),\n  });\n\n  const mapViz =\n    mapStatistic !== 'population' &&\n    (isPerLakh ||\n      statisticConfig?.mapConfig?.colorScale ||\n      statisticConfig?.nonLinear)\n      ? MAP_VIZS.CHOROPLETH\n      : MAP_VIZS.BUBBLES;\n\n  const handleDeltaClick = useCallback(() => {\n    if (statisticConfig?.showDelta) {\n      setDelta7Mode((delta7Mode) => !delta7Mode);\n    }\n  }, [statisticConfig, setDelta7Mode]);\n\n  const stickied = anchor === 'mapexplorer' || (expandTable && width >= 769);\n\n  const transformStatistic = useCallback(\n    (val) =>\n      statisticConfig?.mapConfig?.transformFn\n        ? statisticConfig.mapConfig.transformFn(val)\n        : val,\n    [statisticConfig]\n  );\n\n  const zoneColor = statisticConfig?.mapConfig?.colorScale\n    ? statisticConfig.mapConfig.colorScale(transformStatistic(currentVal))\n    : '';\n\n  return (\n    <div\n      className={classnames(\n        'MapExplorer',\n        {stickied},\n        {\n          hidden:\n            anchor && anchor !== 'mapexplorer' && (!expandTable || width < 769),\n        }\n      )}\n    >\n      <div\n        className={classnames('anchor', 'fadeInUp', {\n          stickied,\n        })}\n        style={{\n          display: width < 769 || (width >= 769 && expandTable) ? 'none' : '',\n        }}\n        onClick={\n          setAnchor &&\n          setAnchor.bind(this, anchor === 'mapexplorer' ? null : 'mapexplorer')\n        }\n      >\n        <PinIcon />\n      </div>\n      <div className=\"panel\" ref={panelRef}>\n        <div className=\"panel-left fadeInUp\" style={trail[0]}>\n          <h2\n            className={classnames(mapStatistic)}\n            style={{color: zoneColor || statisticConfig?.color}}\n          >\n            {t(hoveredRegion.name)}\n            {hoveredRegion.name === UNKNOWN_DISTRICT_KEY &&\n              ` [${t(STATE_NAMES[regionHighlighted.stateCode])}]`}\n          </h2>\n\n          {regionHighlighted.stateCode && (\n            <h1\n              className={classnames('district', mapStatistic)}\n              style={{color: zoneColor || statisticConfig?.color}}\n            >\n              <animated.div>\n                {spring.total.to((total) =>\n                  formatNumber(total, statisticConfig.format, mapStatistic)\n                )}\n              </animated.div>\n              <StatisticDropdown\n                currentStatistic={mapStatistic}\n                statistics={mapStatistics}\n                mapType={mapMeta.mapType}\n                {...{\n                  isPerLakh,\n                  delta7Mode,\n                  mapStatistic,\n                  setMapStatistic,\n                  hideDistrictTestData,\n                  hideVaccinated,\n                  zoneColor,\n                }}\n              />\n            </h1>\n          )}\n        </div>\n\n        <div className={classnames('panel-right', `is-${mapStatistic}`)}>\n          <div className=\"switch-type\">\n            <Tooltip message={'Last 7 day values'} hold>\n              <div\n                className={classnames('toggle', 'fadeInUp', {\n                  'is-highlighted':\n                    (delta7Mode && statisticConfig?.showDelta) ||\n                    statisticConfig?.onlyDelta7,\n                  disabled: !statisticConfig?.showDelta,\n                })}\n                onClick={handleDeltaClick}\n                style={trail[1]}\n              >\n                <Delta7Icon />\n              </div>\n            </Tooltip>\n\n            <Tooltip message={'Per lakh people'} hold>\n              <div\n                className={classnames('toggle', 'fadeInUp', {\n                  'is-highlighted':\n                    !statisticConfig?.nonLinear &&\n                    mapViz === MAP_VIZS.CHOROPLETH,\n                  disabled:\n                    statisticConfig?.nonLinear || mapStatistic === 'population',\n                })}\n                onClick={handlePerLakhClick}\n                style={trail[2]}\n              >\n                <PerLakhIcon />\n              </div>\n            </Tooltip>\n\n            {mapMeta.mapType === MAP_TYPES.COUNTRY && (\n              <Tooltip message={'Toggle between states/districts'} hold>\n                <div\n                  className={classnames('toggle', 'boundary fadeInUp', {\n                    'is-highlighted': isDistrictView,\n                    disabled:\n                      hideDistrictData ||\n                      (statisticConfig?.category === 'tested' &&\n                        hideDistrictTestData),\n                  })}\n                  onClick={handleDistrictClick}\n                  style={trail[3]}\n                >\n                  <OrganizationIcon />\n                </div>\n              </Tooltip>\n            )}\n\n            {mapMeta.mapType === MAP_TYPES.STATE && (\n              <>\n                <div className=\"divider\" />\n                <div\n                  className=\"toggle back fadeInUp\"\n                  onClick={() => {\n                    history.push('/#MapExplorer');\n                  }}\n                  style={trail[4]}\n                >\n                  <ArrowLeftIcon />\n                </div>\n              </>\n            )}\n          </div>\n\n          <div className=\"switch-statistic fadeInUp\" style={trail[5]}>\n            {mapStatistics.map((statistic) => (\n              <div\n                key={statistic}\n                className={classnames(\n                  'toggle',\n                  'statistic-option',\n                  `is-${statistic}`,\n                  {\n                    'is-highlighted': mapStatistic === statistic,\n                  }\n                )}\n                onClick={setMapStatistic.bind(this, statistic)}\n              >\n                <DotFillIcon />\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n\n      <div\n        ref={mapExplorerRef}\n        className=\"fadeInUp\"\n        style={trail[3]}\n        {...swipeHandlers}\n      >\n        {mapStatistic && (\n          <Suspense\n            fallback={\n              <MapVisualizerLoader\n                className=\"map-loader\"\n                {...{\n                  width: mapExplorerRef.current?.clientWidth,\n                  statistic: mapStatistic,\n                }}\n              />\n            }\n          >\n            <MapVisualizer\n              data={mapData}\n              statistic={mapStatistic}\n              {...{\n                mapCode,\n                isDistrictView,\n                mapViz,\n                regionHighlighted,\n                setRegionHighlighted,\n                getMapStatistic,\n                transformStatistic,\n              }}\n            ></MapVisualizer>\n          </Suspense>\n        )}\n      </div>\n    </div>\n  );\n}\n\nconst isEqual = (prevProps, currProps) => {\n  if (!equal(prevProps.stateCode, currProps.stateCode)) {\n    return false;\n  } else if (!equal(prevProps.regionHighlighted, currProps.regionHighlighted)) {\n    return false;\n  } else if (!equal(prevProps.mapView, currProps.mapView)) {\n    return false;\n  } else if (!equal(prevProps.mapStatistic, currProps.mapStatistic)) {\n    return false;\n  } else if (!equal(prevProps.anchor, currProps.anchor)) {\n    return false;\n  } else if (!equal(prevProps.expandTable, currProps.expandTable)) {\n    return false;\n  } else if (!equal(prevProps.hideDistrictData, currProps.hideDistrictData)) {\n    return false;\n  } else if (\n    !equal(prevProps.hideDistrictTestData, currProps.hideDistrictTestData)\n  ) {\n    return false;\n  } else if (!equal(prevProps.hideVaccinated, currProps.hideVaccinated)) {\n    return false;\n  } else if (!equal(prevProps.lastDataDate, currProps.lastDataDate)) {\n    return false;\n  } else if (\n    !equal(\n      prevProps.data?.TT?.meta?.['last_updated'],\n      currProps.data?.TT?.meta?.['last_updated']\n    )\n  ) {\n    return false;\n  } else if (!equal(prevProps.data?.TT?.total, currProps.data?.TT?.total)) {\n    return false;\n  }\n  return true;\n};\n\nexport default memo(MapExplorer, isEqual);\n"],"sourceRoot":""}