{"version":3,"sources":["../node_modules/fast-deep-equal/index.js","../node_modules/d3-array/src/max.js","components/Minigraphs.js"],"names":["module","exports","equal","a","b","constructor","length","i","keys","Array","isArray","RegExp","source","flags","valueOf","Object","prototype","toString","hasOwnProperty","call","key","max","values","valueof","undefined","value","index","margin","Minigraphs","timeseries","timelineDate","date","refs","useRef","endDate","getIndiaDateYesterdayISO","useMeasure","wrapperRef","width","Math","min","dates","useMemo","pastDates","filter","lastDate","cutOffDateLower","formatISO","subDays","parseIndiaDate","MINIGRAPH_LOOKBACK_DAYS","representation","getMinigraphStatistic","useCallback","statistic","statisticConfig","STATISTIC_CONFIGS","chartType","showDelta","nonLinear","getStatistic","useEffect","T","chartRight","chartBottom","xScale","scaleTime","clamp","domain","range","current","forEach","ref","pathLength","svg","select","LEVEL_STATISTICS","color","dailyMaxAbs","abs","yScale","scaleLinear","linePath","line","curve","curveMonotoneX","x","y","selectAll","data","join","enter","append","attr","this","getTotalLength","transition","delay","duration","update","attrTween","previous","interpolatePath","selection","style","className","map","classnames","el","preserveAspectRatio","height","isEqual","prevProps","currProps","forceRender","stateCode","memo"],"mappings":"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","file":"static/js/28.5b5af6e8.chunk.js","sourcesContent":["'use strict';\n\n// do not edit .js files directly - edit src/index.jst\n\n\n\nmodule.exports = function equal(a, b) {\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    if (a.constructor !== b.constructor) return false;\n\n    var length, i, keys;\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n\n\n    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;\n    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();\n\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) return false;\n\n    for (i = length; i-- !== 0;)\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n\n    for (i = length; i-- !== 0;) {\n      var key = keys[i];\n\n      if (!equal(a[key], b[key])) return false;\n    }\n\n    return true;\n  }\n\n  // true if both NaN, false otherwise\n  return a!==a && b!==b;\n};\n","export default function max(values, valueof) {\n  let max;\n  if (valueof === undefined) {\n    for (const value of values) {\n      if (value != null\n          && (max < value || (max === undefined && value >= value))) {\n        max = value;\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null\n          && (max < value || (max === undefined && value >= value))) {\n        max = value;\n      }\n    }\n  }\n  return max;\n}\n","import {\n  MINIGRAPH_LOOKBACK_DAYS,\n  LEVEL_STATISTICS,\n  STATISTIC_CONFIGS,\n} from '../constants';\nimport {\n  getStatistic,\n  getIndiaDateYesterdayISO,\n  parseIndiaDate,\n} from '../utils/commonFunctions';\n\nimport classnames from 'classnames';\nimport {max} from 'd3-array';\nimport {interpolatePath} from 'd3-interpolate-path';\nimport {scaleTime, scaleLinear} from 'd3-scale';\nimport {select} from 'd3-selection';\nimport {line, curveMonotoneX} from 'd3-shape';\nimport 'd3-transition';\nimport {formatISO, subDays} from 'date-fns';\nimport equal from 'fast-deep-equal';\nimport {memo, useCallback, useEffect, useRef, useMemo} from 'react';\nimport {useMeasure} from 'react-use';\n\n// Dimensions\nconst margin = {top: 10, right: 10, bottom: 2, left: 10};\nconst height = 60;\nconst maxWidth = 120;\n\nfunction Minigraphs({timeseries, date: timelineDate}) {\n  const refs = useRef([]);\n  const endDate = timelineDate || getIndiaDateYesterdayISO();\n\n  let [wrapperRef, {width}] = useMeasure();\n  width = Math.min(width, maxWidth);\n\n  const dates = useMemo(() => {\n    const pastDates = Object.keys(timeseries || {}).filter(\n      (date) => date <= endDate\n    );\n    const lastDate = pastDates[pastDates.length - 1];\n\n    const cutOffDateLower = formatISO(\n      subDays(parseIndiaDate(lastDate), MINIGRAPH_LOOKBACK_DAYS),\n      {representation: 'date'}\n    );\n    return pastDates.filter((date) => date >= cutOffDateLower);\n  }, [endDate, timeseries]);\n\n  const getMinigraphStatistic = useCallback(\n    (date, statistic) => {\n      const statisticConfig = STATISTIC_CONFIGS[statistic];\n      const chartType =\n        ((statisticConfig?.showDelta || statisticConfig?.nonLinear) &&\n          'delta') ||\n        'total';\n      const t = getStatistic(timeseries?.[date], chartType, statistic);\n      return t;\n    },\n    [timeseries]\n  );\n\n  useEffect(() => {\n    if (!width) return;\n\n    const T = dates.length;\n\n    const chartRight = width - margin.right;\n    const chartBottom = height - margin.bottom;\n\n    const xScale = scaleTime()\n      .clamp(true)\n      .domain([\n        parseIndiaDate(dates[0] || endDate),\n        parseIndiaDate(dates[T - 1]) || endDate,\n      ])\n      .range([margin.left, chartRight]);\n\n    refs.current.forEach((ref, index) => {\n      const svg = select(ref);\n      const statistic = LEVEL_STATISTICS[index];\n      const color = STATISTIC_CONFIGS[statistic].color;\n\n      const dailyMaxAbs = max(dates, (date) =>\n        Math.abs(getMinigraphStatistic(date, statistic))\n      );\n\n      const yScale = scaleLinear()\n        .clamp(true)\n        .domain([0, dailyMaxAbs])\n        .range([chartBottom, margin.top]);\n\n      const linePath = line()\n        .curve(curveMonotoneX)\n        .x((date) => xScale(parseIndiaDate(date)))\n        .y((date) => yScale(getMinigraphStatistic(date, statistic)));\n\n      let pathLength;\n      svg\n        .selectAll('path')\n        .data(T ? [dates] : [])\n        .join(\n          (enter) =>\n            enter\n              .append('path')\n              .attr('fill', 'none')\n              .attr('stroke', color + '99')\n              .attr('stroke-width', 2.5)\n              .attr('d', linePath)\n              .attr('stroke-dasharray', function () {\n                return (pathLength = this.getTotalLength());\n              })\n              .call((enter) =>\n                enter\n                  .attr('stroke-dashoffset', pathLength)\n                  .transition()\n                  .delay(100)\n                  .duration(2500)\n                  .attr('stroke-dashoffset', 0)\n              ),\n          (update) =>\n            update\n              .attr('stroke-dasharray', null)\n              .transition()\n              .duration(500)\n              .attrTween('d', function (date) {\n                const previous = select(this).attr('d');\n                const current = linePath(date);\n                return interpolatePath(previous, current);\n              })\n              .selection()\n        );\n\n      svg\n        .selectAll('circle')\n        .data(T ? [dates[T - 1]] : [])\n        .join(\n          (enter) =>\n            enter\n              .append('circle')\n              .attr('fill', color)\n              .attr('r', 2.5)\n              .attr('cx', (date) => xScale(parseIndiaDate(date)))\n              .attr('cy', (date) =>\n                yScale(getMinigraphStatistic(date, statistic))\n              )\n              .style('opacity', 0)\n              .call((enter) =>\n                enter\n                  .transition()\n                  .delay(2100)\n                  .duration(500)\n                  .style('opacity', 1)\n                  .attr('cx', (date) => xScale(parseIndiaDate(date)))\n                  .attr('cy', (date) =>\n                    yScale(getMinigraphStatistic(date, statistic))\n                  )\n              ),\n          (update) =>\n            update\n              .transition()\n              .duration(500)\n              .attr('cx', (date) => xScale(parseIndiaDate(date)))\n              .attr('cy', (date) =>\n                yScale(getMinigraphStatistic(date, statistic))\n              )\n              .style('opacity', 1)\n              .selection()\n        );\n    });\n  }, [endDate, dates, width, getMinigraphStatistic]);\n\n  return (\n    <div className=\"Minigraph\">\n      {LEVEL_STATISTICS.map((statistic, index) => (\n        <div\n          key={statistic}\n          className={classnames('svg-parent')}\n          ref={index === 0 ? wrapperRef : null}\n          style={{width: `calc(${100 / LEVEL_STATISTICS.length}%)`}}\n        >\n          <svg\n            ref={(el) => {\n              refs.current[index] = el;\n            }}\n            preserveAspectRatio=\"xMidYMid meet\"\n            width={width}\n            height={height}\n          />\n        </div>\n      ))}\n    </div>\n  );\n}\n\nconst isEqual = (prevProps, currProps) => {\n  if (currProps.forceRender) {\n    return false;\n  } else if (!currProps.timeseries && prevProps.timeseries) {\n    return true;\n  } else if (currProps.timeseries && !prevProps.timeseries) {\n    return false;\n  } else if (!equal(currProps.stateCode, prevProps.stateCode)) {\n    return false;\n  } else if (!equal(currProps.date, prevProps.date)) {\n    return false;\n  }\n  return true;\n};\n\nexport default memo(Minigraphs, isEqual);\n"],"sourceRoot":""}